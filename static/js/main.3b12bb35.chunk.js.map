{"version":3,"sources":["actions/actionConstant.ts","actions/appAction.ts","components/OfflineComponent.tsx","components/TimeComponent.tsx","components/AboutUs.tsx","actions/contactusAction.ts","reducers/ContacUsReducer.ts","components/ContactUs.tsx","reducers/IntroPagesReducer.ts","components/PageListComponent.tsx","routers/router.ts","components/Pages.tsx","components/PageViewer.tsx","App.tsx","Entities/PageIntroInfo.ts","apis/PagesApi.ts","apis/BaseApi.ts","actions/IntroPagesAction.ts","registerServiceWorker.ts","reducers/appReducer.ts","Store/store.ts","index.tsx"],"names":["FETCH_INTROPAGES_SUCCESS","FETCH_INTROPAGES_FAIL","SITE_IS_OFFLINE","SITE_IS_ONLINE","CONTACT_US_CHANGE_NAME","CONTACT_US_CHANGE_EMAIL","CONTACT_US_CHANGE_DESC","APPIsOnline","AppIsOffline","type","APPIsOffline","getAppIsOffline","state","isOffline","OfflineComponent_OfflineComponent","_super","OfflineComponent","props","_this","call","this","AppIsOffEvent","bind","AppIsOnEvent","tslib_es6","prototype","console","log","changeToOffline","changeToOnline","componentWillmount","window","addEventListener","componentwillunmount","removeEventListener","render","react","className","appIsOffline","components_OfflineComponent","Object","es","appMainState","dispatch","ownProps","redux","TimeComponent","componentDidMount","that","interval","setInterval","setTime","componentWillUnmount","time","setState","Date","toLocaleTimeString","AboutUs","document","title","ChangeNameAction","name","Name","ChangeDescAction","desc","Desc","ChangeEmailAction","email","Email","initState","getName","getEmail","getDesc","ContactUs_ContactUs","ContactUs","Send","blurHandlingForEmail","blurHandlingForName","changeHanhleing","blurHandlingForDesc","event","ChangeName","target","value","ChangeEmail","ChangeDesc","alert","onChange","onBlur","placeholder","rows","id","onClick","components_ContactUs","contactusState","IntroPagesReducer_initState","error","items","loaded","getIntroPages","getError","getLoaded","PageListComponent_PageListComponent","PageListComponent","map","info","index","key","IsNew","src","IntroImg","onError","elem","currentTarget","alt","Title","react_router_dom","to","IntroInfo","components_PageListComponent","introPageState","router","path","component","Pages","exact","components_AboutUs","PageViewer","match","params","src_App_0","App","menuIsOpen","menuOnClick","menuDropdownRef","jquery","current","hide","show","components_TimeComponent","ref","rt","react_router","PagesApi","GetIntroInfoList","Promise","resolver","reactPage","Entities_PageIntroInfo","p2","p3","p4","jsPage","p6","p7","nodePage","BaseApi","axiosObj","axios_default","a","create","baseURL","get","url","data","then","response","path_browserify","catch","q","post","config","FetchIntroPagesByApi","undefined","apis_PagesApi","err","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","appReducer_initState","rootReaducer","action","appStore","redux_thunk_es","rootElement","getElementById","react_dom","store","URL","toString","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b12bb35.chunk.js","sourcesContent":["\r\nexport const VIEW_PAGE = 'VIEW_PAGE';\r\nexport const FETCH_INTROPAGES_SUCCESS = \"FETCH_INTROPAGES_SUCCESS\";\r\nexport const FETCH_INTROPAGES_FAIL = \"FETCH_INTROPAGES_FAIL\";\r\n\r\nexport const SITE_IS_OFFLINE = \"SITE_IS_OFFLINE\";\r\nexport const SITE_IS_ONLINE = \"SITE_IS_ONLINE\";\r\n\r\nexport const CONTACT_US_CHANGE_NAME = \"CONTACT_US_CHANGE_NAME\"\r\nexport const CONTACT_US_CHANGE_EMAIL = \"CONTACT_US_CHANGE_EMAIL\"\r\nexport const CONTACT_US_CHANGE_DESC = \"CONTACT_US_CHANGE_DESC\"\r\n","import { IAppMainState } from 'src/Store/AllStates';\r\nimport { SITE_IS_OFFLINE, SITE_IS_ONLINE } from './actionConstant';\r\nimport {  IAppIsOfflineAction, IAppIsOnlineAction } from './actionTypes';\r\n\r\nexport function APPIsOnline(): IAppIsOnlineAction {\r\n\r\n    return {\r\n        AppIsOffline: false,\r\n        type: SITE_IS_ONLINE,\r\n    };\r\n\r\n}\r\n\r\nexport function APPIsOffline(): IAppIsOfflineAction {\r\n\r\n    return {\r\n        AppIsOffline: true,\r\n        type: SITE_IS_OFFLINE,\r\n    }\r\n}\r\n\r\nexport const getAppIsOnline = (state: IAppMainState) => state.isOffline === false;\r\nexport const getAppIsOffline = (state: IAppMainState) => state.isOffline === true;\r\n","import \"bootstrap/scss/bootstrap.scss\"\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { IAppState } from 'src/Store/store';\r\nimport { APPIsOffline, APPIsOnline, getAppIsOffline } from '../actions/appAction';\r\nimport { IAppMainState } from '../Store/AllStates';\r\n\r\ninterface IOfflineComponentProps {\r\n    appIsOffline?: boolean;\r\n    changeToOffline?: () => void;\r\n    changeToOnline?: () => void;\r\n}\r\n\r\nclass OfflineComponent extends React.Component<IOfflineComponentProps, IAppMainState> {\r\n\r\n    constructor(props: IOfflineComponentProps) {\r\n        super(props);\r\n        this.AppIsOffEvent = this.AppIsOffEvent.bind(this);\r\n        this.AppIsOnEvent = this.AppIsOnEvent.bind(this);\r\n    }\r\n\r\n    public AppIsOffEvent() {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(\"AppIsOffEvent\")\r\n        if (this.props.changeToOffline) {\r\n            this.props.changeToOffline();\r\n        }\r\n    }\r\n\r\n    public AppIsOnEvent() {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(\"AppIsOnEvent\")\r\n\r\n        if (this.props.changeToOnline) {\r\n            this.props.changeToOnline();\r\n        }\r\n    }\r\n\r\n    public componentWillmount() {\r\n        window.addEventListener(\"offline\", () => this.AppIsOffEvent());\r\n        window.addEventListener(\"online\", () => this.AppIsOnEvent());\r\n\r\n    }\r\n\r\n    public componentwillunmount() {\r\n        window.removeEventListener(\"offline\", this.AppIsOffEvent);\r\n        window.removeEventListener(\"online\", this.AppIsOnEvent);\r\n\r\n    }\r\n    public render() {\r\n\r\n        return (\r\n            <div className={this.props.appIsOffline ? \"App-Is-Offline\" : \"App-Is-Online\"} > Note: Site is offline.</div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any, ownProps: IOfflineComponentProps) => bindActionCreators({\r\n    changeToOffline: APPIsOffline,\r\n    changeToOnline: APPIsOnline,\r\n}, dispatch);\r\n\r\nconst mapStateToProps = (state: IAppState) => (\r\n    {\r\n        appIsOffline: getAppIsOffline(state.appMainState),\r\n    }\r\n)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OfflineComponent)\r\n","import * as React from 'react'\r\ninterface ITimeState{\r\n   time:string;\r\n}\r\nexport default class TimeComponent extends React.Component<{},ITimeState> {\r\n    private static interval: any;\r\n   \r\n    public componentDidMount() {\r\n        const that = this;\r\n\r\n        TimeComponent.interval = setInterval(() => {\r\n            that.setTime();\r\n        }, 1000);\r\n    }\r\n    public componentWillUnmount() {\r\n        if (TimeComponent.interval) {\r\n            delete TimeComponent.interval;\r\n        }\r\n    }\r\n    public render() {\r\n        return (<div className=\"time-container\">{this.state ? this.state.time: \"\"}</div>)\r\n    }\r\n    private setTime() {\r\n        this.setState({time:new Date().toLocaleTimeString()});\r\n    }\r\n}","import * as React from 'react'\r\n\r\nexport default class AboutUs extends React.Component {\r\n    public render() {\r\n        document.title = \"About Learning Site\";\r\n\r\n        return (<div>about us ... </div>)\r\n    }\r\n}","import { CONTACT_US_CHANGE_DESC, CONTACT_US_CHANGE_EMAIL, CONTACT_US_CHANGE_NAME } from './actionConstant';\r\nimport { IContactUsChangeDescAction, IContactUsChangeEmailAction, IContactUsChangeNameAction } from './actionTypes';\r\n\r\nexport function ChangeNameAction(name: string): IContactUsChangeNameAction {\r\n    return {\r\n        Name: name,\r\n        type: CONTACT_US_CHANGE_NAME,\r\n    }\r\n}\r\n\r\nexport function ChangeDescAction(desc: string): IContactUsChangeDescAction {\r\n    return {\r\n        Desc: desc,\r\n        type: CONTACT_US_CHANGE_DESC,\r\n    }\r\n}\r\n\r\nexport function ChangeEmailAction(email: string): IContactUsChangeEmailAction {\r\n    return {\r\n        Email: email,\r\n        type: CONTACT_US_CHANGE_EMAIL,\r\n    }\r\n}","import { CONTACT_US_CHANGE_DESC, CONTACT_US_CHANGE_EMAIL, CONTACT_US_CHANGE_NAME } from 'src/actions/actionConstant';\r\nimport { ContactUsActionType } from 'src/actions/actionTypes';\r\nimport { IContacUsState } from 'src/Store/AllStates';\r\n\r\nconst initState: IContacUsState = {\r\n    Desc: \"\",\r\n    Email: \"\",\r\n    Name: \"\",\r\n\r\n};\r\n\r\nexport function ContactUsProducer(state: IContacUsState = initState, action: ContactUsActionType) {\r\n\r\n    switch (action.type) {\r\n        case CONTACT_US_CHANGE_NAME:\r\n            return {\r\n                ...state,\r\n                Name: action.Name,\r\n            }\r\n        case CONTACT_US_CHANGE_EMAIL:\r\n            return {\r\n                ...state,\r\n                Email: action.Email,\r\n            }\r\n        case CONTACT_US_CHANGE_DESC:\r\n            return {\r\n                ...state,\r\n                Desc: action.Desc,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getName = (state: IContacUsState) => state.Name;\r\nexport const getEmail = (state: IContacUsState) => state.Email;\r\nexport const getDesc = (state: IContacUsState) => state.Desc;\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { ChangeDescAction, ChangeEmailAction, ChangeNameAction } from 'src/actions/contactusAction';\r\nimport { getDesc, getEmail, getName } from 'src/reducers/ContacUsReducer';\r\nimport { IContacUsState } from 'src/Store/AllStates';\r\nimport { IAppState } from 'src/Store/store';\r\n\r\ninterface IContacUsProps {\r\n    Name: string,\r\n    Email: string,\r\n    Desc: string,\r\n    ChangeName: (name: string) => void;\r\n    ChangeEmail: (email: string) => void;\r\n    ChangeDesc: (desc: string) => void;\r\n}\r\n\r\nclass ContactUs extends React.Component<IContacUsProps, IContacUsState> {\r\n\r\n    constructor(props: IContacUsProps) {\r\n        super(props);\r\n\r\n        this.Send = this.Send.bind(this);\r\n        this.blurHandlingForEmail = this.blurHandlingForEmail.bind(this);\r\n        this.blurHandlingForName = this.blurHandlingForName.bind(this);\r\n        this.changeHanhleing = this.changeHanhleing.bind(this);\r\n        this.blurHandlingForDesc = this.blurHandlingForDesc.bind(this);\r\n    }\r\n\r\n    // tslint:disable-next-line: no-empty\r\n    public changeHanhleing(event: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n    }\r\n    public blurHandlingForName(event: React.FocusEvent<HTMLInputElement>) {\r\n        this.props.ChangeName(event.target.value);\r\n    }\r\n\r\n    public blurHandlingForEmail(event: React.FocusEvent<HTMLInputElement>) {\r\n        this.props.ChangeEmail(event.target.value);\r\n    }\r\n\r\n    public blurHandlingForDesc(event: React.FocusEvent<HTMLTextAreaElement>) {\r\n        this.props.ChangeDesc(event.target.value);\r\n    }\r\n\r\n    public Send() {\r\n        // tslint:disable-next-line: no-console\r\n        alert(this.props.Name);\r\n    }\r\n\r\n    public render() {\r\n        document.title = \"Countact us\";\r\n\r\n        return (<div className=\"contact-us-form\" ><div className=\"desc-top\">لطفا از طریق فرم زیر نظرات و پیشنهادات خود را برای ما ارسال نمایید</div>\r\n            <div className=\"form-group\">\r\n                <label>نام و نام خانوادگی\r\n\r\n                <input className=\"form-control\" onChange={this.changeHanhleing}\r\n                        onBlur={this.blurHandlingForName} type=\"text\" placeholder=\"نام و نام خانوادگی را وارد نمایید.\" />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>ایمیل\r\n                <input className=\"form-control\" type=\"email\" onBlur={this.blurHandlingForEmail}\r\n                        onChange={this.changeHanhleing} placeholder=\"ایمیل خود را وارد نمایید\" />\r\n\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>توضیحات\r\n                <textarea className=\"form-control\" rows={5} onBlur={this.blurHandlingForDesc}\r\n                        placeholder=\"توضیحات خود را وارد نمایید\" />\r\n\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"button\" id=\"sendBtn\" value=\"ارسال\" onClick={this.Send} />   </div>\r\n        </div>)\r\n    }\r\n}\r\nconst mapStateToProps = (state: IAppState) => {\r\n    return {\r\n        Desc: getDesc(state.contactusState),\r\n        Email: getEmail(state.contactusState),\r\n        Name: getName(state.contactusState),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    ChangeDesc: ChangeDescAction,\r\n    ChangeEmail: ChangeEmailAction,\r\n    ChangeName: ChangeNameAction,\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactUs);","import { IntroPagesActionTypes } from 'src/actions/actionTypes';\r\nimport { IIntroPagesState } from 'src/Store/AllStates';\r\nimport { FETCH_INTROPAGES_FAIL, FETCH_INTROPAGES_SUCCESS } from '../actions/actionConstant';\r\n\r\n\r\nconst initState: IIntroPagesState = {\r\n    error: \"\",\r\n    items: [],\r\n    loaded: false,\r\n}\r\n\r\nexport default function IntroPagesRoducer(state = initState, action: IntroPagesActionTypes) {\r\n    switch (action.type) {\r\n        case FETCH_INTROPAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                items: action.items,\r\n                loaded: action.loaded,\r\n            }\r\n        case FETCH_INTROPAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                loaded: action.loaded,\r\n                // tslint:disable-next-line: object-literal-sort-keys\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getIntroPages = (state: IIntroPagesState) => state.items;\r\nexport const getError = (state: IIntroPagesState) => state.error;\r\nexport const getLoaded = (state: IIntroPagesState) => state.loaded;\r\n","import 'bootstrap/dist/css/bootstrap.css'\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\n// import { FetchIntroPagesByApi } from 'src/actions/IntroPagesAction';\nimport PageIntroInfo from 'src/Entities/PageIntroInfo';\nimport { getError, getIntroPages, getLoaded } from 'src/reducers/IntroPagesReducer';\nimport { IIntroPagesState } from 'src/Store/AllStates';\nimport { IAppState } from 'src/Store/store';\nimport '../styles/PageComponent.scss'\n\ninterface IProps {\n  error: string,\n  items: PageIntroInfo[],\n  loaded: boolean,\n  // loadData: () => void,\n}\n\nclass PageListComponent extends React.Component<IProps, IIntroPagesState> {\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <div className=\"row page-container\">\n        {this.props.items.map((info, index) => {\n          return <div key={index} className=\"col-sm-4\">\n            <div className=\"page-item\">\n              <div className={info.IsNew !== true ? \"new-badge-hidden\" : \"new-badge\"} ><span className=\"rotate-span\">جدید</span></div>\n              <div className=\"page-item-header\">\n                <img src={process.env.PUBLIC_URL + '/images/' + info.IntroImg}\n                  // tslint:disable-next-line: jsx-no-lambda\n                  onError={(elem) => elem.currentTarget.className = \"img-not-found\"} className=\"page-item-img\" alt={info.Title} />\n                <div className=\"page-item-title\">\n                  <NavLink\n                    key={index} to={'/Page/' + info.Title} >{info.Title}</NavLink>\n                </div>\n\n              </div>\n\n              <div className=\"page-item-info\" >{info.IntroInfo}</div>\n            </div>\n          </div>\n        })}\n      </div>\n    );\n  }\n}\n/*\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n  loadData: FetchIntroPagesByApi\n}, dispatch);\n*/\nconst mapStateToProps = (state: IAppState) => (\n  {\n    error: getError(state.introPageState),\n    items: getIntroPages(state.introPageState),\n    loaded: getLoaded(state.introPageState)\n  }\n)\n\nexport default connect(mapStateToProps)(PageListComponent)","import AboutUs from '../components/AboutUs'\r\nimport ContactUs from '../components/ContactUs'\r\n import Pages from '../components/Pages'\r\n // import PageListComponent from '../components/PageListComponent'\r\n import PageViewer from '../components/PageViewer'\r\n\r\n const AppRouter = [\r\n    {\r\n        path: \"/\",\r\n        // tslint:disable-next-line: object-literal-sort-keys\r\n        component: Pages,\r\n        exact:true,\r\n        Title:\"Learning Programming Site\"\r\n    },\r\n    {\r\n        path:\"/ContactUs\",\r\n        // tslint:disable-next-line: object-literal-sort-keys\r\n        component:ContactUs,\r\n    },\r\n    {\r\n        path:\"/AboutUs\",\r\n        // tslint:disable-next-line: object-literal-sort-keys\r\n        component:AboutUs,\r\n        Title:\"About Learning Site\"\r\n\r\n    },\r\n    {\r\n        path:\"/Page/:Name\",\r\n        // tslint:disable-next-line: object-literal-sort-keys\r\n        component:PageViewer\r\n    }\r\n]\r\n\r\nexport default AppRouter;\r\n","import * as React from'react'\r\nimport PageListComponent from './PageListComponent'\r\n\r\nexport default class Pages extends React.Component{\r\n\r\n    public render(){\r\n\r\n        return (\r\n            \r\n            <PageListComponent/>\r\n            \r\n        )\r\n    }\r\n}","import * as React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { IPageViewProps } from 'src/Entities/Interfaces';\r\n\r\nexport default class PageViewer extends React.Component<IPageViewProps>{\r\n    \r\n    public render() {\r\n        document.title=this.props.match.params.Name;\r\n        return (<div className=\"page-viewer-container\"><h3>\r\n            {this.props.match.params.Name}\r\n        </h3>\r\n        <p>\r\n\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n        <p>\r\n\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n        <p>\r\n\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n        <p>\r\n5\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n        <p>\r\n4\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n        <p>\r\n3\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n\r\n        <p>\r\n2\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n        <p>\r\n1\r\n        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n        kkjfkdsfddskfjdsf\r\n        kkjf dsfj\r\n        </p>\r\n        \r\n            <hr />\r\n            <Link to=\"/\" >Home</Link>\r\n\r\n        </div>)\r\n    }\r\n}","import \"bootstrap/scss/bootstrap.scss\"\nimport * as $ from 'jquery'\nimport * as React from 'react';\nimport { Link } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.scss';\nimport OfflineComponent from './components/OfflineComponent'\nimport TimeComponent from './components/TimeComponent'\nimport AppRouter from './routers/router'\nclass App extends React.Component {\n  private menuDropdownRef: any;\n  private menuIsOpen: boolean = false;\n  constructor(props: any) {\n    super(props);\n    this.menuOnClick = this.menuOnClick.bind(this);\n    this.menuDropdownRef = React.createRef();\n  }\n\n  public menuOnClick() {\n    if (!this.menuIsOpen) {\n      $(this.menuDropdownRef.current).show();\n      this.menuIsOpen = true;\n    }\n    else {\n      $(this.menuDropdownRef.current).hide();\n      this.menuIsOpen = false;\n    }\n  }\n\n  public render() {\n    document.title = \"Learning Programming Site\";\n\n    return (\n      <Router>\n\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1 className=\"App-title\">آموزش برنامه نویسی</h1>\n            <div className=\"title\">\n              <div className=\"app-time\">\n                <TimeComponent />\n              </div>\n            </div>\n          </header>\n          <div className=\"app-menubar \">\n            <div className=\"menu-icon \" onClick={this.menuOnClick}>.</div>\n            <div className=\"row\" ref={this.menuDropdownRef}>\n              <div className=\"col-2\">\n                <Link to=\"/\" >Home</Link>\n              </div>\n              <div className=\"col-2\">\n                <Link to=\"/ContactUs\" >Contact us</Link></div>\n              <div className=\"col-2\">\n                <Link to=\"/AboutUs\" >About us</Link></div>\n            </div>\n          </div>\n          <div className=\"pages-container\">\n            {\n              AppRouter.map((rt, index: number) => {\n\n                // tslint:disable-next-line: jsx-no-lambda\n                return <Route key={index} exact={rt.exact || false} path={rt.path} render={props => <rt.component {...props} />} />\n              })\n            }\n          </div>\n          <OfflineComponent />\n          <div className=\"App-footer\">@Copy right</div>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","export default class PageIntroInfo{\r\n    public IntroImg:string;\r\n    public IntroInfo:string;\r\n    public Title:string;\r\n    public IsNew:boolean;\r\n\r\n}","import PageIntroInfo from 'src/Entities/PageIntroInfo';\r\nimport BaseApi from './BaseApi';\r\n\r\nexport default class PagesApi extends BaseApi{\r\n\r\n   public async GetIntroInfoList()\r\n   {\r\n       return new Promise<PageIntroInfo[]>((resolver:any)=>{\r\n        const reactPage = new PageIntroInfo();\r\n        reactPage.Title=\"React\";\r\n        reactPage.IntroInfo=\"در این بخش، توضیحات کاملی از ایحاد  پروژه تا اجرا یک برنامه react داده می شود.\";\r\n        reactPage.IntroImg=\"React.png\";\r\n        reactPage.IsNew=true;\r\n\r\n        const p2 = new PageIntroInfo();\r\n        p2.Title=\"Angular\";\r\n        p2.IntroInfo=\"about creating a Angular project.\";\r\n        p2.IntroImg=\"Angular.png\";\r\n\r\n        const p3 = new PageIntroInfo();\r\n        p3.Title=\"typescript\";\r\n        p3.IntroInfo=\"about creating a typescript project.\";\r\n        p3.IntroImg=\"ts.png\";\r\n\r\n        const p4 = new PageIntroInfo();\r\n        p4.Title=\"web Api\";\r\n        p4.IntroInfo=\"about creating a web api project.\";\r\n        p4.IntroImg=\"\";\r\n\r\n        const jsPage = new PageIntroInfo();\r\n        jsPage.Title=\"javascript\";\r\n        jsPage.IntroInfo=\"در بخش به برنامه نویسی به زبان javascrip می پردازیم.\";\r\n        jsPage.IntroImg=\"js.png\";\r\n\r\n        const p6 = new PageIntroInfo();\r\n        p6.Title=\"jquery\";\r\n        p6.IntroInfo=\"about creating a jquery project.\\n\\t this is atemplatefor new project.\";\r\n        p6.IntroImg=\"\";\r\n\r\n        const p7 = new PageIntroInfo();\r\n        p7.Title=\"Vue\";\r\n        p7.IntroInfo=\"about creating a Vue project.\\n\\t this is sample new project.\";\r\n        p7.IntroImg=\"Vue.png\";\r\n        p7.IsNew=true;\r\n\r\n\r\n        const nodePage = new PageIntroInfo();\r\n        nodePage.Title=\"Node.js\";\r\n        nodePage.IntroInfo=\"در این بخش در مورد نحوه نصب برنامه Node.js توضیح داده خواهد شد.\";\r\n        nodePage.IntroImg=\"node.png\";\r\n        resolver( [jsPage,nodePage,reactPage,p6,p7,p2,p3,p4]);\r\n       });\r\n   }\r\n}","import axios from 'axios'\r\nimport { resolve } from 'path';\r\nimport { reject } from 'q';\r\n\r\nexport default class BaseApi {\r\n\r\n    private axiosObj = axios.create({\r\n        baseURL: \"\"\r\n    });\r\n\r\n    public get(url: string, data: any) {\r\n        this.axiosObj.get(url)\r\n            .then((response: any) => {\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            });\r\n    }\r\n\r\n    public post(url: string, config: any) {\r\n\r\n        this.axiosObj.post(url,config)\r\n            .then((response: any) => {\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            });\r\n    }\r\n}","import axios from 'axios'\r\nimport { ActionCreator, Dispatch } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport PagesApi from 'src/apis/PagesApi';\r\nimport PageIntroInfo from 'src/Entities/PageIntroInfo';\r\nimport { IIntroPagesState } from 'src/Store/AllStates';\r\nimport { FETCH_INTROPAGES_FAIL, FETCH_INTROPAGES_SUCCESS } from './actionConstant';\r\nimport { IntroPagesActionTypes } from './actionTypes';\r\n\r\n\r\nexport const FetchIntroPages: ActionCreator<ThunkAction<Promise<any>, IIntroPagesState, null, IntroPagesActionTypes>> = () => {\r\n\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await axios.get(\"\");\r\n        dispatch({\r\n            items: response.data,\r\n            loaded: true,\r\n            type: FETCH_INTROPAGES_SUCCESS,\r\n        })\r\n    }\r\n}\r\n\r\nexport const FetchIntroPagesByApi: ActionCreator<\r\n    ThunkAction<Promise<any>, IIntroPagesState, null, IntroPagesActionTypes>> = () => {\r\n\r\n        return async (dispatch: Dispatch) => {\r\n            const pagesApi = new PagesApi();\r\n            pagesApi.GetIntroInfoList()\r\n                .then((data: PageIntroInfo[]) => {\r\n                    dispatch({\r\n                        items: data,\r\n                        loaded: true,\r\n                        type: FETCH_INTROPAGES_SUCCESS,\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    dispatch({\r\n                        error: err,\r\n                        loaded: false,\r\n                        type: FETCH_INTROPAGES_FAIL\r\n                    })\r\n                });\r\n        }\r\n    }","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SITE_IS_OFFLINE, SITE_IS_ONLINE } from 'src/actions/actionConstant';\r\nimport { AppActionTypes } from 'src/actions/actionTypes';\r\nimport { IAppMainState } from 'src/Store/AllStates';\r\n\r\nconst initState: IAppMainState = {\r\n    isOffline: false,\r\n};\r\n\r\nexport function AppReducer(state: IAppMainState = initState, action: AppActionTypes) {\r\n    switch (action.type) {\r\n        case SITE_IS_ONLINE:\r\n            return {\r\n                ...state,\r\n                isOffline: false,\r\n            }\r\n        case SITE_IS_OFFLINE:\r\n            return {\r\n                ...state,\r\n                isOffline: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { AppReducer } from 'src/reducers/appReducer';\r\nimport { ContactUsProducer } from 'src/reducers/ContacUsReducer';\r\nimport IntroPagesReducer from '../reducers/IntroPagesReducer'\r\nimport { IAppMainState, IContacUsState, IIntroPagesState } from './AllStates';\r\n\r\nexport interface IAppState {\r\n    appMainState: IAppMainState,\r\n    introPageState: IIntroPagesState,\r\n    contactusState: IContacUsState,\r\n}\r\n\r\nconst rootReaducer = combineReducers<IAppState>({\r\n    appMainState: AppReducer,\r\n    contactusState: ContactUsProducer,\r\n    introPageState: IntroPagesReducer,\r\n});\r\n\r\nexport function configStore(): Store<IAppState, any> {\r\n    const store = createStore(rootReaducer, applyMiddleware(thunk));\r\n    return store;\r\n}\r\n\r\nexport const appStore = configStore();","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\n\nimport { FetchIntroPagesByApi } from './actions/IntroPagesAction';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport { appStore } from './Store/store';\n\nfunction initApp() {\n  appStore.dispatch(FetchIntroPagesByApi());\n}\nconst rootElement = document.getElementById('root');\ninitApp();\nReactDOM.render(\n  <Provider store={appStore}>\n    <App />\n  </Provider>,\n  rootElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}